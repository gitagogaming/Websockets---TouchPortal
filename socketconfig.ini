######### Example Websockets Plugin Config

## In our example below we have two websocket servers which we can connect to. 
## The name specified here will be used to create states inside of TouchPortal and will be used to further identify the server as well.

## In the first example below you will see it named 'PiServer'
## You may rename 'PiServer' to anything you would like, but it must be unique to the other servers you have configured.



[PiServer]
## Specify the servers URL here, since this is a socketIO server this should begin with http://
socketURL = "http://192.168.0.104:5000"

## For every event you want to subscribe to, you should keep the format as shown below.
## Each additional event should be numbered sequentially, starting with 1.
## The eventParse value is the key that will be used to parse the data from the event.
## For example if the server sends the following data: {"cpu_update": {"usage": 0.5}}
## The eventName is what will be used to create the state inside of TouchPortal.
## The eventParse value set to "usage" will parse the data from the event and set the state to 0.5
[PiServer.events.event1]
eventName = "cpu_update"
eventParse = "usage"

[PiServer.events.event2]
eventName = "memory_update"
eventParse = "usage"

[PiServer.events.event3]
eventName = "network_update"
eventParse = "data_recv_mb"

[PiServer.events.event4]
eventName = "cpu_temp"
eventParse = "temp"

[PiServer.events.event5]
eventName = "image_update"
eventParse = "image"


## This is a second example of a websocket server, this one is named 'OtherServer'
## It does not have any events and will simply connect to the server and send commands when the user may specify. 
## It will proccess the response and send it back to a generic state named 'OtherServer.response'
## Since this is a basic websocket server and not socketIO the URL should begin with ws://
[OtherServer]
socketURL = "ws://localhost:9000"

